name: Make TWRP Device

on:
  workflow_dispatch:
    inputs:
      IMG_URL:    
        description: 'IMG_URL'
        required: true
        default: ''

jobs:
  build:
    timeout-minutes: 30 #超时设置
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
   
    
    steps:
    - name: Check Out
      uses: actions/checkout@main
      
    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y install software-properties-common # 确保add-apt-repository可用
        sudo add-apt-repository universe -y # 添加universe仓库
        sudo apt update
        # 安装Python3和相关工具
        sudo apt -y install python3 python3-pip python3-dev cpio wget aria2
        # 创建python指向python3的符号链接
        sudo ln -sf /usr/bin/python3 /usr/bin/python
        # 验证安装
        python --version
        pip3 --version
        mkdir dt
        
    - name: Download boot or recovery img with retry
      run: |
        # 设置最大重试次数
        MAX_RETRIES=3
        RETRY_DELAY=10  # 设置重试等待时间（秒）
        # 使用 wget 进行下载，并启用重试机制
        # 使用循环来实现重试逻辑
        for i in $(seq 1 $MAX_RETRIES); do
          echo "Download attempt $i of $MAX_RETRIES..."
        #aria2下载程序 
        aria2c "${{ github.event.inputs.IMG_URL }}"
          ls
        # 检查文件是否下载成功并有效
        if [ ! -f "vendor_boot.img" ]; then
        echo "Error: Downloaded file does not exist."
        exit 1
        fi
        FILE_SIZE=$(stat -c%s "vendor_boot.img")
        if [ "$FILE_SIZE" -lt 10000000 ]; then  # 假设文件应大于10MB
        echo "Error: Downloaded file seems too small ($FILE_SIZE bytes). Might be an error page."
        exit 1
        fi
        echo "Download completed successfully. File size: $FILE_SIZE bytes"
        ls -la vendor_boot.img

    - name: Start build
      run: |
        python3 -m twrpdtgen -o dt/ *.img
    - name: ZIP device tree
      run: |
        zip -r DeviceTree.zip ./dt
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./DeviceTree.zip
        name: TWRP_Device_Tree-${{ github.run_id }}
        tag_name: build-${{ github.run_id }}
        body: DeviceTree for twrp
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
